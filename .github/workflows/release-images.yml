name: release

on:
  workflow_dispatch:
  push:
    branches:
      - main
  schedule:
    # Run at 6PM UTC every Monday which is 2 hours after the truemark/aws-cli build
    - cron: '0 18 * * 1'

# https://github.com/gautamkrishnar/keepalive-workflow/discussions/13
permissions:
  id-token: write
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.SSH_DEPLOY_KEY }}
      - name: Keepalive
        uses: gautamkrishnar/keepalive-workflow@v1
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: "${{ secrets.AWS_ASSUME_ROLE }}"
          aws-region: "us-east-1"
      - name: Login to ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public
      - name: Setup Buildx Remote Docker
        id: buildx
        uses: truemark/aws-buildx-remote-docker-instance-action@v4
        with:
          security-group-id: "${{ vars.SECURITY_GROUP_ID }}"
          subnet-id: "${{ vars.SUBNET_ID }}"
          instance-profile: "${{ vars.INSTANCE_PROFILE }}"
          region: "us-east-2"
      ###############################################################################
      # Amazon Linux
      ###############################################################################
      - name: Build Amazon Linux
        run: |
          docker buildx build \
            --push \
            --platform linux/arm64,linux/amd64 \
            -f amazonlinux.Dockerfile \
            -t truemark/aws-cdk:amazonlinux-${{github.run_number}} \
            -t truemark/aws-cdk:amazonlinux \
            -t truemark/aws-cdk:latest \
            --target base \
            .
      - name: Copy amazonlinux-${{github.run_number}} to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/aws-cdk:amazonlinux-${{github.run_number}}"
          dest-image: "docker://public.ecr.aws/truemark/aws-cdk:amazonlinux-${{github.run_number}}"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Copy amazonlinux to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/aws-cdk:amazonlinux"
          dest-image: "docker://public.ecr.aws/truemark/aws-cdk:amazonlinux"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Copy latest to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/aws-cdk:latest"
          dest-image: "docker://public.ecr.aws/truemark/aws-cdk:latest"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Build Amazon Linux Dotnet 6
        run: |
          docker buildx build \
            --push \
            --platform linux/arm64,linux/amd64 \
            -f amazonlinux.Dockerfile \
            -t truemark/aws-cdk:amazonlinux-dotnet6-${{github.run_number}} \
            -t truemark/aws-cdk:amazonlinux-dotnet6 \
            -t truemark/aws-cdk:latest-dotnet6 \
            --target dotnet6 \
            .
      - name: Copy amazonlinux-dotnet6-${{github.run_number}} to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/aws-cdk:amazonlinux-dotnet6-${{github.run_number}}"
          dest-image: "docker://public.ecr.aws/truemark/aws-cdk:amazonlinux-dotnet6-${{github.run_number}}"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Copy amazonlinux-dotnet6 to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/aws-cdk:amazonlinux-dotnet6"
          dest-image: "docker://public.ecr.aws/truemark/aws-cdk:amazonlinux-dotnet6"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Copy latest-dotnet6 to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/aws-cdk:latest-dotnet6"
          dest-image: "docker://public.ecr.aws/truemark/aws-cdk:latest-dotnet6"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Build Amazon Linux Dotnet 6 JRE 17
        run: |
          docker buildx build \
            --push \
            --platform linux/arm64,linux/amd64 \
            -f amazonlinux.Dockerfile \
            -t truemark/aws-cdk:amazonlinux-dotnet6-jre-17-${{github.run_number}} \
            -t truemark/aws-cdk:amazonlinux-dotnet6-jre-17 \
            -t truemark/aws-cdk:latest-dotnet6-jre-17 \
            --target dotnet6-jre-17 \
            .
      - name: Copy amazonlinux-dotnet6-jre-17-${{github.run_number}} to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/aws-cdk:amazonlinux-dotnet6-jre-17-${{github.run_number}}"
          dest-image: "docker://public.ecr.aws/truemark/aws-cdk:amazonlinux-dotnet6-jre-17-${{github.run_number}}"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Copy amazonlinux-dotnet6-jre-17 to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/aws-cdk:amazonlinux-dotnet6-jre-17"
          dest-image: "docker://public.ecr.aws/truemark/aws-cdk:amazonlinux-dotnet6-jre-17"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Copy latest-dotnet6-jre-17 to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/aws-cdk:latest-dotnet6-jre-17"
          dest-image: "docker://public.ecr.aws/truemark/aws-cdk:latest-dotnet6-jre-17"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Build Amazon Linux Dotnet 7
        run: |
          docker buildx build \
            --push \
            --platform linux/arm64,linux/amd64 \
            -f amazonlinux.Dockerfile \
            -t truemark/aws-cdk:amazonlinux-dotnet7-${{github.run_number}} \
            -t truemark/aws-cdk:amazonlinux-dotnet7 \
            -t truemark/aws-cdk:latest-dotnet7 \
            --target dotnet7 \
            .
      - name: Copy amazonlinux-dotnet7-${{github.run_number}} to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/aws-cdk:amazonlinux-dotnet7-${{github.run_number}}"
          dest-image: "docker://public.ecr.aws/truemark/aws-cdk:amazonlinux-dotnet7-${{github.run_number}}"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Copy amazonlinux-dotnet7 to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/aws-cdk:amazonlinux-dotnet7"
          dest-image: "docker://public.ecr.aws/truemark/aws-cdk:amazonlinux-dotnet7"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Copy latest-dotnet7 to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/aws-cdk:latest-dotnet7"
          dest-image: "docker://public.ecr.aws/truemark/aws-cdk:latest-dotnet7"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Build Amazon Linux Dotnet 7 JRE 17
        run: |
          docker buildx build \
            --push \
            --platform linux/arm64,linux/amd64 \
            -f amazonlinux.Dockerfile \
            -t truemark/aws-cdk:amazonlinux-dotnet7-jre-17-${{github.run_number}} \
            -t truemark/aws-cdk:amazonlinux-dotnet7-jre-17 \
            -t truemark/aws-cdk:latest-dotnet7-jre-17 \
            --target dotnet7-jre-17 \
            .
      - name: Copy amazonlinux-dotnet7-jre-17-${{github.run_number}} to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/aws-cdk:amazonlinux-dotnet7-jre-17-${{github.run_number}}"
          dest-image: "docker://public.ecr.aws/truemark/aws-cdk:amazonlinux-dotnet7-jre-17-${{github.run_number}}"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Copy amazonlinux-dotnet7-jre-17 to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/aws-cdk:amazonlinux-dotnet7-jre-17"
          dest-image: "docker://public.ecr.aws/truemark/aws-cdk:amazonlinux-dotnet7-jre-17"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Copy latest-dotnet7-jre-17 to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/aws-cdk:latest-dotnet7-jre-17"
          dest-image: "docker://public.ecr.aws/truemark/aws-cdk:latest-dotnet7-jre-17"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Build Amazon Linux Go
        run: |
          docker buildx build \
            --push \
            --platform linux/arm64,linux/amd64 \
            -f amazonlinux.Dockerfile \
            -t truemark/aws-cdk:amazonlinux-go-${{github.run_number}} \
            -t truemark/aws-cdk:amazonlinux-go \
            -t truemark/aws-cdk:latest-go \
            --target go \
            .
      - name: Copy amazonlinux-go-${{github.run_number}} to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/aws-cdk:amazonlinux-go-${{github.run_number}}"
          dest-image: "docker://public.ecr.aws/truemark/aws-cdk:amazonlinux-go-${{github.run_number}}"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Copy amazonlinux-go to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/aws-cdk:amazonlinux-go"
          dest-image: "docker://public.ecr.aws/truemark/aws-cdk:amazonlinux-go"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Copy latest-go to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/aws-cdk:latest-go"
          dest-image: "docker://public.ecr.aws/truemark/aws-cdk:latest-go"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      ###############################################################################
      # Ubuntu Linux
      ###############################################################################
      - name: Build Ubuntu
        run: |
          docker buildx build \
            --push \
            --platform linux/arm64,linux/amd64 \
            -f ubuntu.Dockerfile \
            -t truemark/aws-cdk:ubuntu-${{github.run_number}} \
            -t truemark/aws-cdk:ubuntu \
            --target base \
            .
      - name: Copy ubuntu-${{github.run_number}} to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/aws-cdk:ubuntu-${{github.run_number}}"
          dest-image: "docker://public.ecr.aws/truemark/aws-cdk:ubuntu-${{github.run_number}}"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Copy ubuntu to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/aws-cdk:ubuntu"
          dest-image: "docker://public.ecr.aws/truemark/aws-cdk:ubuntu"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Build Ubuntu Dotnet 6
        run: |
          docker buildx build \
            --push \
            --platform linux/arm64,linux/amd64 \
            -f ubuntu.Dockerfile \
            -t truemark/aws-cdk:ubuntu-dotnet6-${{github.run_number}} \
            -t truemark/aws-cdk:ubuntu-dotnet6 \
            --target dotnet6 \
            .
      - name: Copy ubuntu-dotnet6-${{github.run_number}} to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/aws-cdk:ubuntu-dotnet6-${{github.run_number}}"
          dest-image: "docker://public.ecr.aws/truemark/aws-cdk:ubuntu-dotnet6-${{github.run_number}}"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Copy ubuntu-dotnet6 to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/aws-cdk:ubuntu-dotnet6"
          dest-image: "docker://public.ecr.aws/truemark/aws-cdk:ubuntu-dotnet6"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Build Ubuntu Dotnet 7
        run: |
          docker buildx build \
            --push \
            --platform linux/arm64,linux/amd64 \
            -f ubuntu.Dockerfile \
            -t truemark/aws-cdk:ubuntu-dotnet7-${{github.run_number}} \
            -t truemark/aws-cdk:ubuntu-dotnet7 \
            --target dotnet7 \
            .
      - name: Copy ubuntu-dotnet7-${{github.run_number}} to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/aws-cdk:ubuntu-dotnet7-${{github.run_number}}"
          dest-image: "docker://public.ecr.aws/truemark/aws-cdk:ubuntu-dotnet7-${{github.run_number}}"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Copy ubuntu-dotnet7 to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/aws-cdk:ubuntu-dotnet7"
          dest-image: "docker://public.ecr.aws/truemark/aws-cdk:ubuntu-dotnet7"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Build Ubuntu Go
        run: |
          docker buildx build \
            --push \
            --platform linux/arm64,linux/amd64 \
            -f ubuntu.Dockerfile \
            -t truemark/aws-cdk:ubuntu-go-${{github.run_number}} \
            -t truemark/aws-cdk:ubuntu-go \
            --target go \
            .
      - name: Copy ubuntu-go-${{github.run_number}} to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/aws-cdk:ubuntu-go-${{github.run_number}}"
          dest-image: "docker://public.ecr.aws/truemark/aws-cdk:ubuntu-go-${{github.run_number}}"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Copy ubuntu-go to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/aws-cdk:ubuntu-go"
          dest-image: "docker://public.ecr.aws/truemark/aws-cdk:ubuntu-go"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      ###############################################################################
      # Alpine Linux
      ###############################################################################
      - name: Build Alpine
        run: |
          docker buildx build \
            --push \
            --platform linux/arm64,linux/amd64 \
            -f alpine.Dockerfile \
            -t truemark/aws-cdk:alpine-${{github.run_number}} \
            -t truemark/aws-cdk:alpine \
            --target base \
            .
      - name: Copy alpine-${{github.run_number}} to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/aws-cdk:alpine-${{github.run_number}}"
          dest-image: "docker://public.ecr.aws/truemark/aws-cdk:alpine-${{github.run_number}}"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Copy alpine to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/aws-cdk:alpine"
          dest-image: "docker://public.ecr.aws/truemark/aws-cdk:alpine"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Build Alpine Dotnet 6
        run: |
          docker buildx build \
            --push \
            --platform linux/arm64,linux/amd64 \
            -f alpine.Dockerfile \
            -t truemark/aws-cdk:alpine-dotnet6-${{github.run_number}} \
            -t truemark/aws-cdk:alpine-dotnet6 \
            --target dotnet6 \
            .
      - name: Copy alpine-dotnet6-${{github.run_number}} to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/aws-cdk:alpine-dotnet6-${{github.run_number}}"
          dest-image: "docker://public.ecr.aws/truemark/aws-cdk:alpine-dotnet6-${{github.run_number}}"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Copy alpine-dotnet6 to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/aws-cdk:alpine-dotnet6"
          dest-image: "docker://public.ecr.aws/truemark/aws-cdk:alpine-dotnet6"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Build Alpine Dotnet 7
        run: |
          docker buildx build \
            --push \
            --platform linux/arm64,linux/amd64 \
            -f alpine.Dockerfile \
            -t truemark/aws-cdk:alpine-dotnet7-${{github.run_number}} \
            -t truemark/aws-cdk:alpine-dotnet7 \
            --target dotnet7 \
            .
      - name: Copy alpine-dotnet7-${{github.run_number}} to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/aws-cdk:alpine-dotnet7-${{github.run_number}}"
          dest-image: "docker://public.ecr.aws/truemark/aws-cdk:alpine-dotnet7-${{github.run_number}}"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Copy alpine-dotnet7 to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/aws-cdk:alpine-dotnet7"
          dest-image: "docker://public.ecr.aws/truemark/aws-cdk:alpine-dotnet7"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Build Alpine Go
        run: |
          docker buildx build \
            --push \
            --platform linux/arm64,linux/amd64 \
            -f alpine.Dockerfile \
            -t truemark/aws-cdk:alpine-go-${{github.run_number}} \
            -t truemark/aws-cdk:alpine-go \
            --target go \
            .
      - name: Copy alpine-go-${{github.run_number}} to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/aws-cdk:alpine-go-${{github.run_number}}"
          dest-image: "docker://public.ecr.aws/truemark/aws-cdk:alpine-go-${{github.run_number}}"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
      - name: Copy alpine-go to ECR
        uses: truemark/skopeo-copy-action@v1
        with:
          src-image: "docker://truemark/aws-cdk:alpine-go"
          dest-image: "docker://public.ecr.aws/truemark/aws-cdk:alpine-go"
          src-username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          src-password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          dest-username: "${{ steps.ecr-login.outputs.docker_username_public_ecr_aws }}"
          dest-password: "${{ steps.ecr-login.outputs.docker_password_public_ecr_aws }}"
          multi-arch: "all"
