name: example

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: "${{ secrets.AWS_ASSUME_ROLE }}"
          aws-region: "us-east-2"
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Setup Buildx Remote Docker
        id: buildx
        uses: truemark/aws-buildx-remote-docker-instance-action@9e0eec06dd97dd08eba0629c37dfd5df11b87bde
        with:
          security-group-id: "sg-0baf5bcfe9f21efa5"
          subnet-id: "subnet-09a35a2abd797dbf9"
          instance-profile: "TruemarkEC2RoleforSSM"
          region: "us-east-2"
      - name: Build images
        run: |
          docker buildx build \
            --push \
            --platform linux/arm64,linux/amd64 \
            -f amazonlinux.Dockerfile \
            -t truemark/aws-cdk:beta-amazonlinux \
            -t truemark/aws-cdk:beta \
            .
          docker buildx build \
            --push \
            --platform linux/arm64,linux/amd64 \
            -f alpine.Dockerfile \
            -t truemark/aws-cdk:beta-alpine \
            .
          docker buildx build \
            --push \
            --platform linux/arm64,linux/amd64 \
            -f ubuntu.Dockerfile \
            -t truemark/aws-cdk:beta-ubuntu \
            .
      - name: Get ECR password
        run: |
          ECR_PASSWORD=$(aws ecr-public get-login-password --region us-east-1)
          echo "::add-mask::$ECR_PASSWORD"
          echo "ecr_password=$ECR_PASSWORD" >> $GITHUB_ENV
      - name: Copy beta to ECR
        uses: docker://quay.io/skopeo/stable:latest
        with:
          args: >
            --insecure-policy copy 
            docker://truemark/aws-cdk:beta 
            docker://public.ecr.aws/truemark/aws-cdk:beta
            --src-username ${{ secrets.DOCKER_HUB_USERNAME }} --src-password ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
            --dest-username AWS --dest-password "${{ env.ecr_password }}"
            --multi-arch all
      - name: Copy beta-amazonlinux to ECR
        uses: docker://quay.io/skopeo/stable:latest
        with:
          args: >
            --insecure-policy copy 
            docker://truemark/aws-cdk:beta-amazonlinux 
            docker://public.ecr.aws/truemark/aws-cdk:beta-amazonlinux
            --src-username ${{ secrets.DOCKER_HUB_USERNAME }} --src-password ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} 
            --dest-username AWS --dest-password "${{ env.ecr_password }}"
            --multi-arch all
      - name: Copy beta-alpine to ECR
        uses: docker://quay.io/skopeo/stable:latest
        with:
          args: >
            --insecure-policy copy 
            docker://truemark/aws-cdk:beta-alpine 
            docker://public.ecr.aws/truemark/aws-cdk:beta-alpine
            --src-username ${{ secrets.DOCKER_HUB_USERNAME }} --src-password ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} 
            --dest-username AWS --dest-password "${{ env.ecr_password }}"
            --multi-arch all
      - name: Copy beta-ubuntu to ECR
        uses: docker://quay.io/skopeo/stable:latest
        with:
          args: >
            --insecure-policy copy 
            docker://truemark/aws-cdk:beta-ubuntu 
            docker://public.ecr.aws/truemark/aws-cdk:beta-ubuntu
            --src-username ${{ secrets.DOCKER_HUB_USERNAME }} --src-password ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} 
            --dest-username AWS --dest-password "${{ env.ecr_password }}"
            --multi-arch all
