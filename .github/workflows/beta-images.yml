name: beta

on:
  workflow_dispatch:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    branches:
      - main
permissions:
  id-token: write
  contents: write

jobs:
  build-amazon-linux:
    concurrency:
      group: amazon-linux
      cancel-in-progress: false
    uses: ./.github/workflows/docker-buildx.yml
    with:
      dockerfile: "amazonlinux.Dockerfile"
      images: "truemark/aws-cdk:beta-amazonlinux-${{github.run_number}},truemark/aws-cdk:beta-amazonlinux,truemark/aws-cdk:beta"
      copy_to_ecr_prefix: "public.ecr.aws/truemark"
      target: base
      security_group_id: ${{ vars.SECURITY_GROUP_ID }}
      subnet_id: ${{ vars.SUBNET_ID }}
      instance_profile: ${{ vars.INSTANCE_PROFILE }}
      region: ${{ vars.AWS_REGION }}
    secrets:
      aws_assume_role: ${{ secrets.AWS_ASSUME_ROLE }}
      docker_hub_username: ${{ secrets.DOCKER_HUB_USERNAME }}
      docker_hub_password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  build-amazon-linux-dotnetcore31:
    concurrency:
      group: amazon-linux
      cancel-in-progress: false
    uses: ./.github/workflows/docker-buildx.yml
    with:
      dockerfile: "amazonlinux.Dockerfile"
      images: "truemark/aws-cdk:beta-amazonlinux-dotnetcore31-${{github.run_number}},truemark/aws-cdk:beta-amazonlinux-dotnetcore31,truemark/aws-cdk:beta-dotnetcore31"
      copy_to_ecr_prefix: "public.ecr.aws/truemark"
      target: dotnetcore31
      security_group_id: ${{ vars.SECURITY_GROUP_ID }}
      subnet_id: ${{ vars.SUBNET_ID }}
      instance_profile: ${{ vars.INSTANCE_PROFILE }}
      region: ${{ vars.AWS_REGION }}
    secrets:
      aws_assume_role: ${{ secrets.AWS_ASSUME_ROLE }}
      docker_hub_username: ${{ secrets.DOCKER_HUB_USERNAME }}
      docker_hub_password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  build-amazon-linux-dotnetcore31-jre-17:
    concurrency:
      group: amazon-linux
      cancel-in-progress: false
    uses: ./.github/workflows/docker-buildx.yml
    with:
      dockerfile: "amazonlinux.Dockerfile"
      images: "truemark/aws-cdk:beta-amazonlinux-dotnetcore31-jre-17-${{github.run_number}},truemark/aws-cdk:beta-amazonlinux-dotnetcore31-jre-17,truemark/aws-cdk:beta-dotnetcore31-jre-17"
      copy_to_ecr_prefix: "public.ecr.aws/truemark"
      target: dotnetcore31-jre-17
      security_group_id: ${{ vars.SECURITY_GROUP_ID }}
      subnet_id: ${{ vars.SUBNET_ID }}
      instance_profile: ${{ vars.INSTANCE_PROFILE }}
      region: ${{ vars.AWS_REGION }}
    secrets:
      aws_assume_role: ${{ secrets.AWS_ASSUME_ROLE }}
      docker_hub_username: ${{ secrets.DOCKER_HUB_USERNAME }}
      docker_hub_password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  build-amazon-linux-dotnet5:
    concurrency:
      group: amazon-linux
      cancel-in-progress: false
    uses: ./.github/workflows/docker-buildx.yml
    with:
      dockerfile: "amazonlinux.Dockerfile"
      images: "truemark/aws-cdk:beta-amazonlinux-dotnet5-${{github.run_number}},truemark/aws-cdk:beta-amazonlinux-dotnet5,truemark/aws-cdk:beta-dotnet5"
      copy_to_ecr_prefix: "public.ecr.aws/truemark"
      target: dotnet5
      security_group_id: ${{ vars.SECURITY_GROUP_ID }}
      subnet_id: ${{ vars.SUBNET_ID }}
      instance_profile: ${{ vars.INSTANCE_PROFILE }}
      region: ${{ vars.AWS_REGION }}
    secrets:
      aws_assume_role: ${{ secrets.AWS_ASSUME_ROLE }}
      docker_hub_username: ${{ secrets.DOCKER_HUB_USERNAME }}
      docker_hub_password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  build-amazon-linux-dotnet5-jre-17:
    concurrency:
      group: amazon-linux
      cancel-in-progress: false
    uses: ./.github/workflows/docker-buildx.yml
    with:
      dockerfile: "amazonlinux.Dockerfile"
      images: "truemark/aws-cdk:beta-amazonlinux-dotnet5-jre-17-${{github.run_number}},truemark/aws-cdk:beta-amazonlinux-dotnet5-jre-17,truemark/aws-cdk:beta-dotnet5-jre-17"
      copy_to_ecr_prefix: "public.ecr.aws/truemark"
      target: dotnet5-jre-17
      security_group_id: ${{ vars.SECURITY_GROUP_ID }}
      subnet_id: ${{ vars.SUBNET_ID }}
      instance_profile: ${{ vars.INSTANCE_PROFILE }}
      region: ${{ vars.AWS_REGION }}
    secrets:
      aws_assume_role: ${{ secrets.AWS_ASSUME_ROLE }}
      docker_hub_username: ${{ secrets.DOCKER_HUB_USERNAME }}
      docker_hub_password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  build-amazon-linux-dotnet6:
    concurrency:
      group: amazon-linux
      cancel-in-progress: false
    uses: ./.github/workflows/docker-buildx.yml
    with:
      dockerfile: "amazonlinux.Dockerfile"
      images: "truemark/aws-cdk:beta-amazonlinux-dotnet6-${{github.run_number}},truemark/aws-cdk:beta-amazonlinux-dotnet6,truemark/aws-cdk:beta-dotnet6"
      copy_to_ecr_prefix: "public.ecr.aws/truemark"
      target: dotnet6
      security_group_id: ${{ vars.SECURITY_GROUP_ID }}
      subnet_id: ${{ vars.SUBNET_ID }}
      instance_profile: ${{ vars.INSTANCE_PROFILE }}
      region: ${{ vars.AWS_REGION }}
    secrets:
      aws_assume_role: ${{ secrets.AWS_ASSUME_ROLE }}
      docker_hub_username: ${{ secrets.DOCKER_HUB_USERNAME }}
      docker_hub_password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  build-amazon-linux-dotnet6-jre-17:
    concurrency:
      group: amazon-linux
      cancel-in-progress: false
    uses: ./.github/workflows/docker-buildx.yml
    with:
      dockerfile: "amazonlinux.Dockerfile"
      images: "truemark/aws-cdk:beta-amazonlinux-dotnet6-jre-17-${{github.run_number}},truemark/aws-cdk:beta-amazonlinux-dotnet6-jre-17,truemark/aws-cdk:beta-dotnet6-jre-17"
      copy_to_ecr_prefix: "public.ecr.aws/truemark"
      target: dotnet6-jre-17
      security_group_id: ${{ vars.SECURITY_GROUP_ID }}
      subnet_id: ${{ vars.SUBNET_ID }}
      instance_profile: ${{ vars.INSTANCE_PROFILE }}
      region: ${{ vars.AWS_REGION }}
    secrets:
      aws_assume_role: ${{ secrets.AWS_ASSUME_ROLE }}
      docker_hub_username: ${{ secrets.DOCKER_HUB_USERNAME }}
      docker_hub_password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  build-amazon-linux-dotnet7:
    concurrency:
      group: amazon-linux
      cancel-in-progress: false
    uses: ./.github/workflows/docker-buildx.yml
    with:
      dockerfile: "amazonlinux.Dockerfile"
      images: "truemark/aws-cdk:beta-amazonlinux-dotnet7-${{github.run_number}},truemark/aws-cdk:beta-amazonlinux-dotnet7,truemark/aws-cdk:beta-dotnet7"
      copy_to_ecr_prefix: "public.ecr.aws/truemark"
      target: dotnet7
      security_group_id: ${{ vars.SECURITY_GROUP_ID }}
      subnet_id: ${{ vars.SUBNET_ID }}
      instance_profile: ${{ vars.INSTANCE_PROFILE }}
      region: ${{ vars.AWS_REGION }}
    secrets:
      aws_assume_role: ${{ secrets.AWS_ASSUME_ROLE }}
      docker_hub_username: ${{ secrets.DOCKER_HUB_USERNAME }}
      docker_hub_password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  build-amazon-linux-dotnet7-jre-17:
    concurrency:
      group: amazon-linux
      cancel-in-progress: false
    uses: ./.github/workflows/docker-buildx.yml
    with:
      dockerfile: "amazonlinux.Dockerfile"
      images: "truemark/aws-cdk:beta-amazonlinux-dotnet7-jre-17-${{github.run_number}},truemark/aws-cdk:beta-amazonlinux-dotnet7-jre-17,truemark/aws-cdk:beta-dotnet7-jre-17"
      copy_to_ecr_prefix: "public.ecr.aws/truemark"
      target: dotnet7-jre-17
      security_group_id: ${{ vars.SECURITY_GROUP_ID }}
      subnet_id: ${{ vars.SUBNET_ID }}
      instance_profile: ${{ vars.INSTANCE_PROFILE }}
      region: ${{ vars.AWS_REGION }}
    secrets:
      aws_assume_role: ${{ secrets.AWS_ASSUME_ROLE }}
      docker_hub_username: ${{ secrets.DOCKER_HUB_USERNAME }}
      docker_hub_password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  build-amazon-linux-go:
    concurrency:
      group: amazon-linux
      cancel-in-progress: false
    uses: ./.github/workflows/docker-buildx.yml
    with:
      dockerfile: "amazonlinux.Dockerfile"
      images: "truemark/aws-cdk:beta-amazonlinux-go-${{github.run_number}},truemark/aws-cdk:beta-amazonlinux-go,truemark/aws-cdk:beta-go"
      copy_to_ecr_prefix: "public.ecr.aws/truemark"
      target: go
      security_group_id: ${{ vars.SECURITY_GROUP_ID }}
      subnet_id: ${{ vars.SUBNET_ID }}
      instance_profile: ${{ vars.INSTANCE_PROFILE }}
      region: ${{ vars.AWS_REGION }}
    secrets:
      aws_assume_role: ${{ secrets.AWS_ASSUME_ROLE }}
      docker_hub_username: ${{ secrets.DOCKER_HUB_USERNAME }}
      docker_hub_password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  build-ubuntu:
    concurrency:
      group: ubuntu
      cancel-in-progress: false
    uses: ./.github/workflows/docker-buildx.yml
    with:
      dockerfile: "ubuntu.Dockerfile"
      images: "truemark/aws-cdk:beta-ubuntu-${{github.run_number}},truemark/aws-cdk:beta-ubuntu"
      copy_to_ecr_prefix: "public.ecr.aws/truemark"
      target: base
      security_group_id: ${{ vars.SECURITY_GROUP_ID }}
      subnet_id: ${{ vars.SUBNET_ID }}
      instance_profile: ${{ vars.INSTANCE_PROFILE }}
      region: ${{ vars.AWS_REGION }}
    secrets:
      aws_assume_role: ${{ secrets.AWS_ASSUME_ROLE }}
      docker_hub_username: ${{ secrets.DOCKER_HUB_USERNAME }}
      docker_hub_password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  build-ubuntu-dotnet6:
    uses: ./.github/workflows/docker-buildx.yml
    with:
      dockerfile: "ubuntu.Dockerfile"
      images: "truemark/aws-cdk:beta-ubuntu-dotnet6-${{github.run_number}},truemark/aws-cdk:beta-ubuntu-dotnet6"
      copy_to_ecr_prefix: "public.ecr.aws/truemark"
      target: dotnet6
      security_group_id: ${{ vars.SECURITY_GROUP_ID }}
      subnet_id: ${{ vars.SUBNET_ID }}
      instance_profile: ${{ vars.INSTANCE_PROFILE }}
      region: ${{ vars.AWS_REGION }}
    secrets:
      aws_assume_role: ${{ secrets.AWS_ASSUME_ROLE }}
      docker_hub_username: ${{ secrets.DOCKER_HUB_USERNAME }}
      docker_hub_password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  build-ubuntu-dotnet6-jre-17:
    concurrency:
      group: ubuntu
      cancel-in-progress: false
    uses: ./.github/workflows/docker-buildx.yml
    with:
      dockerfile: "ubuntu.Dockerfile"
      images: "truemark/aws-cdk:beta-ubuntu-dotnet6-jre-17-${{github.run_number}},truemark/aws-cdk:beta-ubuntu-dotnet6-jre-17"
      copy_to_ecr_prefix: "public.ecr.aws/truemark"
      target: dotnet6-jre-17
      security_group_id: ${{ vars.SECURITY_GROUP_ID }}
      subnet_id: ${{ vars.SUBNET_ID }}
      instance_profile: ${{ vars.INSTANCE_PROFILE }}
      region: ${{ vars.AWS_REGION }}
    secrets:
      aws_assume_role: ${{ secrets.AWS_ASSUME_ROLE }}
      docker_hub_username: ${{ secrets.DOCKER_HUB_USERNAME }}
      docker_hub_password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  build-ubuntu-dotnet7:
    concurrency:
      group: ubuntu
      cancel-in-progress: false
    uses: ./.github/workflows/docker-buildx.yml
    with:
      dockerfile: "ubuntu.Dockerfile"
      images: "truemark/aws-cdk:beta-ubuntu-dotnet7-${{github.run_number}},truemark/aws-cdk:beta-ubuntu-dotnet7"
      copy_to_ecr_prefix: "public.ecr.aws/truemark"
      target: dotnet7
      security_group_id: ${{ vars.SECURITY_GROUP_ID }}
      subnet_id: ${{ vars.SUBNET_ID }}
      instance_profile: ${{ vars.INSTANCE_PROFILE }}
      region: ${{ vars.AWS_REGION }}
    secrets:
      aws_assume_role: ${{ secrets.AWS_ASSUME_ROLE }}
      docker_hub_username: ${{ secrets.DOCKER_HUB_USERNAME }}
      docker_hub_password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  build-ubuntu-dotnet7-jre-17:
    concurrency:
      group: ubuntu
      cancel-in-progress: false
    uses: ./.github/workflows/docker-buildx.yml
    with:
      dockerfile: "ubuntu.Dockerfile"
      images: "truemark/aws-cdk:beta-ubuntu-dotnet7-jre-17-${{github.run_number}},truemark/aws-cdk:beta-ubuntu-dotnet7-jre-17"
      copy_to_ecr_prefix: "public.ecr.aws/truemark"
      target: dotnet7-jre-17
      security_group_id: ${{ vars.SECURITY_GROUP_ID }}
      subnet_id: ${{ vars.SUBNET_ID }}
      instance_profile: ${{ vars.INSTANCE_PROFILE }}
      region: ${{ vars.AWS_REGION }}
    secrets:
      aws_assume_role: ${{ secrets.AWS_ASSUME_ROLE }}
      docker_hub_username: ${{ secrets.DOCKER_HUB_USERNAME }}
      docker_hub_password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  build-ubuntu-go:
    concurrency:
      group: ubuntu
      cancel-in-progress: false
    uses: ./.github/workflows/docker-buildx.yml
    with:
      dockerfile: "ubuntu.Dockerfile"
      images: "truemark/aws-cdk:beta-ubuntu-go-${{github.run_number}},truemark/aws-cdk:beta-ubuntu-go"
      copy_to_ecr_prefix: "public.ecr.aws/truemark"
      target: go
      security_group_id: ${{ vars.SECURITY_GROUP_ID }}
      subnet_id: ${{ vars.SUBNET_ID }}
      instance_profile: ${{ vars.INSTANCE_PROFILE }}
      region: ${{ vars.AWS_REGION }}
    secrets:
      aws_assume_role: ${{ secrets.AWS_ASSUME_ROLE }}
      docker_hub_username: ${{ secrets.DOCKER_HUB_USERNAME }}
      docker_hub_password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  build-alpine:
    concurrency:
      group: alpine
      cancel-in-progress: false
    uses: ./.github/workflows/docker-buildx.yml
    with:
      dockerfile: "alpine.Dockerfile"
      images: "truemark/aws-cdk:beta-alpine-${{github.run_number}},truemark/aws-cdk:beta-alpine"
      copy_to_ecr_prefix: "public.ecr.aws/truemark"
      target: base
      security_group_id: ${{ vars.SECURITY_GROUP_ID }}
      subnet_id: ${{ vars.SUBNET_ID }}
      instance_profile: ${{ vars.INSTANCE_PROFILE }}
      region: ${{ vars.AWS_REGION }}
    secrets:
      aws_assume_role: ${{ secrets.AWS_ASSUME_ROLE }}
      docker_hub_username: ${{ secrets.DOCKER_HUB_USERNAME }}
      docker_hub_password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  build-alpine-dotnet6:
    concurrency:
      group: alpine
      cancel-in-progress: false
    uses: ./.github/workflows/docker-buildx.yml
    with:
      dockerfile: "alpine.Dockerfile"
      images: "truemark/aws-cdk:beta-alpine-dotnet6-${{github.run_number}},truemark/aws-cdk:beta-alpine-dotnet6"
      copy_to_ecr_prefix: "public.ecr.aws/truemark"
      target: dotnet6
      security_group_id: ${{ vars.SECURITY_GROUP_ID }}
      subnet_id: ${{ vars.SUBNET_ID }}
      instance_profile: ${{ vars.INSTANCE_PROFILE }}
      region: ${{ vars.AWS_REGION }}
    secrets:
      aws_assume_role: ${{ secrets.AWS_ASSUME_ROLE }}
      docker_hub_username: ${{ secrets.DOCKER_HUB_USERNAME }}
      docker_hub_password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  build-alpine-dotnet7:
    concurrency:
      group: alpine
      cancel-in-progress: false
    uses: ./.github/workflows/docker-buildx.yml
    with:
      dockerfile: "alpine.Dockerfile"
      images: "truemark/aws-cdk:beta-alpine-dotnet7-${{github.run_number}},truemark/aws-cdk:beta-alpine-dotnet7"
      copy_to_ecr_prefix: "public.ecr.aws/truemark"
      target: dotnet7
      security_group_id: ${{ vars.SECURITY_GROUP_ID }}
      subnet_id: ${{ vars.SUBNET_ID }}
      instance_profile: ${{ vars.INSTANCE_PROFILE }}
      region: ${{ vars.AWS_REGION }}
    secrets:
      aws_assume_role: ${{ secrets.AWS_ASSUME_ROLE }}
      docker_hub_username: ${{ secrets.DOCKER_HUB_USERNAME }}
      docker_hub_password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  build-alpine-go:
    concurrency:
      group: alpine
      cancel-in-progress: false
    uses: ./.github/workflows/docker-buildx.yml
    with:
      dockerfile: "alpine.Dockerfile"
      images: "truemark/aws-cdk:beta-alpine-go-${{github.run_number}},truemark/aws-cdk:beta-alpine-go"
      copy_to_ecr_prefix: "public.ecr.aws/truemark"
      target: go
      security_group_id: ${{ vars.SECURITY_GROUP_ID }}
      subnet_id: ${{ vars.SUBNET_ID }}
      instance_profile: ${{ vars.INSTANCE_PROFILE }}
      region: ${{ vars.AWS_REGION }}
    secrets:
      aws_assume_role: ${{ secrets.AWS_ASSUME_ROLE }}
      docker_hub_username: ${{ secrets.DOCKER_HUB_USERNAME }}
      docker_hub_password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
